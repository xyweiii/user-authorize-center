<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plover.authorize.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.plover.authorize.model.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="deleted" jdbcType="TINYINT" property="deleted"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="updateDate" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="createBy" jdbcType="VARCHAR" property="createBy"/>
        <result column="updateBy" jdbcType="VARCHAR" property="updateBy"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, userName, password, role, email, mobile, status, deleted,
    createDate, updateDate, createBy, updateBy
   </sql>

    <select id="list" parameterType="com.plover.authorize.form.UserQueryForm" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where deleted = 0 and userName !='admin'
        <if test="userName != null and userName!='' ">
            and userName like concat('%',#{userName},'%')
        </if>
        order by updateDate desc
        limit #{start },#{limit}
    </select>

    <select id="count" parameterType="com.plover.authorize.form.UserQueryForm" resultType="java.lang.Integer">
        select count(1)
        from user
        where deleted = 0 and userName !='admin'
        <if test="userName != null and userName!='' ">
            and userName like concat('%',#{userName},'%')
        </if>
    </select>

    <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findByUserName" resultType="com.plover.authorize.model.User">
        select
        <include refid="Base_Column_List"/>
        from user
        where userName = #{userName,jdbcType=INTEGER}
    </select>

    <insert id="add" parameterType="com.plover.authorize.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                userName,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
            <if test="updateDate != null">
                updateDate,
            </if>
            <if test="createBy != null">
                createBy,
            </if>
            <if test="updateBy != null">
                updateBy,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=TINYINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.plover.authorize.model.User">
        update user
        <set>
            <if test="userName != null">
                userName = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=TINYINT},
            </if>
            <if test="updateBy != null">
                updateBy = #{updateBy,jdbcType=VARCHAR},
            </if>
            updateDate = NOW()
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
    update  staff set deleted = 1,updateBy=#{updateBy}
    where id = #{id,jdbcType=INTEGER}
  </delete>
</mapper>